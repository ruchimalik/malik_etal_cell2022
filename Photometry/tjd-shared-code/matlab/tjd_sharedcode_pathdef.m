function p = td_sharedcode_pathdef
% TD_SHAREDCODE_PATHDEF - some paths you might want - Tom's shared code
%
% In your startup.m (or at the command line)
%
% cd C:\MATLAB\tjd-shared-code\matlab % path to folder containing this file
% path(td_sharedcode_pathdef,path);
%
% Tom Davidson (tjd@stanford.edu/tjd@alum.mit.edu) May 2010
 
path_to_repo = pwd; % since we cd'd here before running this

p = [...
    path_to_repo '/' pathsep, ...
    path_to_repo '/cont' pathsep, ...
    path_to_repo '/mwl-import' pathsep, ...
    path_to_repo '/nlx-import' pathsep, ...
    path_to_repo '/nex-import' pathsep, ...
    genpath([path_to_repo '/obj']), ... % get subfolders too
    path_to_repo '/util' pathsep, ...
    path_to_repo '/photometry' pathsep, ...
    path_to_repo '/spikeslpos' pathsep, ...
    path_to_repo '/spikeslpos/callbacks' pathsep, ...
    path_to_repo '/tdt' pathsep, ...
    path_to_repo '/tdt/import' pathsep, ...
    path_to_repo '/tdt/control' pathsep, ...
    ...
];

% pretty it up, Matlab actually will accept either slash
p = strrep(p, '/', filesep);