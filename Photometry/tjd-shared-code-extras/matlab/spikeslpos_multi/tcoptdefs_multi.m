function tcopt = tcoptdefs_multi(varargin)
% TCOPTDEFS make some useful tunecurve opt structs from 'e', other params 
  
  a = struct('e', [],...
             'epochi', [],...
             'runepochi',[],...
             'runspeed', 15,...
             'trackend_offset', 0,...
             'pos_edges', [],...
             'pos_binsize', [],...
             'pos_nbins', [],...
             'pos_histrange', [],...
             'pos_smooth_sd_cm',5,...
             'xy_binsize', [],...
             'xy_nbins', [],...
             'x_range', [],...
             'y_range', [],...
             'xy_smooth_sd_cm', [],...
             'hd_nbins', 36,...
             'lvelf_edges', -100:5:100);
  
  a = parseArgsLite(varargin,a);
  
  if isempty(a.runepochi) && ~isempty(a.e),
    a.runepochi = find(strcmp('run', {a.e.epoch.behav}), 1, 'first');
  end

  % get default linearized pos range from track length
  if isempty(a.pos_histrange) && ~isempty(a.e),
    track = a.e.track(a.e.epoch(a.runepochi).tracki);
    a.pos_histrange = [a.trackend_offset track.length-a.trackend_offset];
  end
  
  if isempty(a.pos_binsize) && isempty(a.pos_nbins) && isempty(a.pos_edges);
    a.pos_nbins = 100;
  end
  
  % get default xy track range from pos records
  if isempty(a.x_range) && ~isempty(a.e)
    a.x_range = [0 1.1*max(getepd(a.e.epoch(a.epochi).pos, 'centx'))];
  end
  if isempty(a.y_range) && ~isempty(a.e)
    a.y_range = [0 1.1*max(getepd(a.e.epoch(a.epochi).pos, 'centy'))];
  end
  
  if isempty(a.xy_binsize) && isempty(a.xy_nbins),
    a.xy_binsize = 5;
  end
  
  % specify histogram edges for tuning curves
  pos_tuneparams = {'l', 'lvelf'};
  pos_histedges = mkhistedges('edges', a.pos_edges,...
                              'nbins', a.pos_nbins,...
                              'binsize', a.pos_binsize,...
                              'range', a.pos_histrange);
  
  hd_histedges = mkhistedges('nbins', a.hd_nbins,...
                             'range', [0 360]);
  
  x_histedges = mkhistedges('range', a.x_range, ...
                            'binsize', a.xy_binsize,...
                            'nbins', a.xy_nbins);

  y_histedges = mkhistedges('range', a.y_range, ...
                            'binsize', a.xy_binsize,...
                            'nbins', a.xy_nbins);
  
  lvelf_histedges = mkhistedges('edges', a.lvelf_edges);
  
  tcopt.outbound = mktunecurveopt(...
      'name', 'outbound',...
      'tuneparams', pos_tuneparams,...
      'histedges', {pos_histedges ...
                    [a.runspeed Inf]},...
      'smooth_sds', {a.pos_smooth_sd_cm []},...
      'runtimes', a.e.epoch(a.runepochi).times);

  tcopt.inbound = mktunecurveopt(...
      'name', 'inbound',...
      'tuneparams', pos_tuneparams,...
      'histedges', {pos_histedges ...
                    [-Inf -a.runspeed]},...
      'smooth_sds', {a.pos_smooth_sd_cm []},...
      'runtimes', a.e.epoch(a.runepochi).times);
    
  tcopt.place = mktunecurveopt(...
      'name', 'place',...
      'tuneparams', {'l' 'lspeedf'},...
      'histedges', {pos_histedges...
                   [a.runspeed Inf]},...
      'smooth_sds', {a.pos_smooth_sd_cm []},...
      'runtimes', a.e.epoch(a.runepochi).times);

  tcopt.pos_x_vel = mktunecurveopt(...
      'name', 'pos_x_vel',...
      'tuneparams', {'l' 'lvelf'},...
      'histedges', {pos_histedges,...
                    [-Inf -a.runspeed a.runspeed Inf]},...
      'keepbins', {[] [1 0 1]},...
      'smooth_sds', {a.pos_smooth_sd_cm []},...
      'runtimes', a.e.epoch(a.runepochi).times);

  tcopt.pos_x_vel_nosmooth = mktunecurveopt(...
      'name', 'pos_x_vel',...
      'tuneparams', {'l' 'lvelf'},...
      'histedges', {pos_histedges,...
                    [-Inf -a.runspeed a.runspeed Inf]},...
      'keepbins', {[] [1 0 1]},...
      'smooth_sds', {[] []},...
      'runtimes', a.e.epoch(a.runepochi).times);

  tcopt.centx = mktunecurveopt(...
      'name', 'centx',...
      'tuneparams', {'centx'},...
      'histedges', {x_histedges},...
      'smooth_sds', {a.xy_smooth_sd_cm},...
      'runtimes', a.e.epoch(a.runepochi).times);

  tcopt.centy = mktunecurveopt(...
      'name', 'centy',...
      'tuneparams', {'centy'},...
      'histedges', {y_histedges},...
      'smooth_sds', {a.xy_smooth_sd_cm},...
      'runtimes', a.e.epoch(a.runepochi).times);

  
  tcopt.xy_place = mktunecurveopt(...
      'name', 'xy_place',...
      'tuneparams', {'centy' 'centx' 'lspeedf'},...
      'histedges', {y_histedges,...
                    x_histedges,...
                    [a.runspeed Inf]},...
      'smooth_sds', {a.xy_smooth_sd_cm a.xy_smooth_sd_cm []},...
      'runtimes', a.e.epoch(a.runepochi).times);
    
  tcopt.xy_pos_x_vel = mktunecurveopt(...
      'name', 'xy_pos_x_vel',...
      'tuneparams', {'centy' 'centx' 'lvelf'},...
      'histedges', {y_histedges,...
                    x_histedges,...
                    [-Inf -a.runspeed a.runspeed Inf]},...
      'keepbins', {[] [] [1 0 1]},...
      'smooth_sds', {a.xy_smooth_sd_cm a.xy_smooth_sd_cm []},...
      'runtimes', a.e.epoch(a.runepochi).times);
  
  tcopt.headdir = mktunecurveopt(...
      'name', 'headdir',...
      'tuneparams', {'headdir'},...
      'histedges', {hd_histedges},...
      'runtimes', a.e.epoch(a.runepochi).times);

  tcopt.lvelf = mktunecurveopt(...
      'name', 'lvelf',...
      'tuneparams', {'lvelf'},...
      'histedges', {lvelf_histedges},...
      'runtimes', a.e.epoch(a.runepochi).times);
  
  % Tuning curves using only times with even or odd seconds (for position validation)
    
  tcopt.place_val_odd = mktunecurveopt(...
      'name', 'place',...
      'validate', 'useodd',...
      'tuneparams', {'l' 'lspeedf'},...
      'histedges', {pos_histedges...
                    [a.runspeed Inf]},...
      'smooth_sds', {a.pos_smooth_sd_cm []},...
      'runtimes', a.e.epoch(a.runepochi).times);
  
  tcopt.place_val_even = mktunecurveopt(...
      'name', 'place',...
      'validate', 'useeven',...
      'tuneparams', {'l' 'lspeedf'},...
      'histedges', {pos_histedges...
                    [a.runspeed Inf]},...
      'smooth_sds', {a.pos_smooth_sd_cm []},...
      'runtimes', a.e.epoch(a.runepochi).times);
  
  tcopt.pos_x_vel_val_odd = mktunecurveopt(...
      'name', 'pos_x_vel',...
      'validate', 'useodd',...
      'tuneparams', {'l' 'lvelf'},...
      'histedges', {pos_histedges,...
                    [-Inf -a.runspeed a.runspeed Inf]},...
      'keepbins', {[] [1 0 1]},...
      'smooth_sds', {a.pos_smooth_sd_cm []},...
      'runtimes', a.e.epoch(a.runepochi).times);
  
  tcopt.pos_x_vel_val_even = mktunecurveopt(...
      'name', 'pos_x_vel',...
      'validate', 'useeven',...
      'tuneparams', {'l' 'lvelf'},...
      'histedges', {pos_histedges,...
                    [-Inf -a.runspeed a.runspeed Inf]},...
      'keepbins', {[] [1 0 1]},...
      'smooth_sds', {a.pos_smooth_sd_cm []},...
      'runtimes', a.e.epoch(a.runepochi).times);
  
